// Generated by typings
// Source: https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/56295f5058cac7ae458540423c50ac2dcf9fc711/levelup/levelup.d.ts
// 注意,这个库并非标准的 levelJS 的东西,我修改过的
interface Batch {
    type: string;
    key: any;
    value?: any;
    keyEncoding?: string;
    valueEncoding?: string;
}
interface IteratorDB {
    // next(callback?: (err: any, key: any, value: any) => any): void
    next(callback?: Function): void
    end(callback?: Function): void
}
interface IteratorParams {
    keys?: boolean
    values?: boolean
    raw?: boolean
    limit?: number
    reverse?: boolean
}
interface LevelUp {
    open(options?: {cacheSize?: number}, callback ?: (error: any) => any): void;
    close(callback ?: (error: any) => any): void;
    put(key: any, value: any, callback ?: (error: any) => any): void;
    put(key: any, value: any, options?: { sync?: boolean, raw?: boolean}, callback ?: (error: any) => any): void;
    get(key: any, callback ?: (error: any, value: any) => any): void;

    get(key: any, options ?: { keyEncoding?: string; fillCache?: boolean; raw?: boolean}, callback ?: (error: any, value: any) => any): void;
    del(key: any, callback ?: (error: any) => any): void;
    del(key: any, options ?: { keyEncoding?: string; sync?: boolean }, callback ?: (error: any) => any): void;


    batch(array: Batch[], options?: { keyEncoding?: string; valueEncoding?: string; sync?: boolean }, callback?: (error?: any) => any): void;
    batch(array: Batch[], callback?: (error?: any) => any): void;
    batch(): LevelUpChain;
    isOpen(): boolean;
    isClosed(): boolean;
    createReadStream(options?: any): any;
    createKeyStream(options?: any): any;
    createValueStream(options?: any): any;
    createWriteStream(options?: any): any;
    destroy(location: string, callback?: Function): void;
    repair(location: string, callback?: Function): void;
    iterator(options?: IteratorParams): IteratorDB
}

interface LevelUpChain {
    put(key: any, value: any): LevelUpChain;
    put(key: any, value: any, options?: { sync?: boolean }): LevelUpChain;
    del(key: any): LevelUpChain;
    del(key: any, options ?: { keyEncoding?: string; sync?: boolean }): LevelUpChain;
    clear(): LevelUpChain;
    write(callback?: (error?: any) => any): LevelUpChain;
}

interface levelupOptions {
    createIfMissing?: boolean;
    errorIfExists?: boolean;
    compression?: boolean;
    cacheSize?: number;
    keyEncoding?: string;
    valueEncoding?: string;
    db?: string
}

declare module "levelup" {

    function levelup(hostname: string, options?: levelupOptions): LevelUp;

    export = levelup;
}

declare module "leveldown" {

    export function destroy(location: string, callback?: Function): void;

    export function repair(location: string, callback?: Function): void;
}